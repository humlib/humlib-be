services:
  setup:
    profiles: ["all", "elastic-only"]
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTICSTACK_VERSION}
    networks:
      - elk
    volumes:
      - "./volumes/certs:/usr/share/elasticsearch/config/certs:delegated"
    user: "0"
    command: >
      bash -c '
        if [ ! -f certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: es01\n"\
          "    dns:\n"\
          "      - es01\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://es01:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u elastic:${ELASTICSTACK_USER_ELASTIC_PASSWORD} -H "Content-Type: application/json" https://es01:9200/_security/user/kibana_system/_password -d "{\"password\":\"${ELASTICSTACK_USER_KIBANA_SYSTEM_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
        echo "All done!";
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es01/es01.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120

  es01:
    profiles: ["all", "elastic-only"]
    depends_on:
      setup:
        condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTICSTACK_VERSION}
    networks:
      - elk
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - "./volumes/certs:/usr/share/elasticsearch/config/certs:delegated"
      - "./volumes/esdata01:/usr/share/elasticsearch/data:delegated"
      - "./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
    environment:
      ES_JAVA_OPTS: -Xmx256m -Xms256m
      ELASTIC_PASSWORD: ${ELASTICSTACK_USER_ELASTIC_PASSWORD}
    mem_limit: ${DOCKER_MEM_LIMIT_ELASTICSTACK}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  logstash:
    profiles: [ "all" ]
    environment:
      ELASTICSTACK_USER_ELASTIC_PASSWORD: ${ELASTICSTACK_USER_ELASTIC_PASSWORD}
    depends_on:
      es01:
        condition: service_healthy
    image: docker.elastic.co/logstash/logstash:${ELASTICSTACK_VERSION}
    networks:
      - elk
    volumes:
      - "./volumes/certs:/usr/share/logstash/certs:delegated"
      - "./volumes/logstashdata:/usr/share/logstash/data:delegated"
      - "./config/logstash:/usr/share/logstash/config:delegated"
      - "../logs/:/var/log/local_development:delegated"
    ports:
      - 5044:5044
    mem_limit: ${DOCKER_MEM_LIMIT_ELASTICSTACK}

  kibana:
    profiles: ["all"]
    depends_on:
      es01:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${ELASTICSTACK_VERSION}
    environment:
      ELASTICSTACK_USER_KIBANA_SYSTEM_PASSWORD: ${ELASTICSTACK_USER_KIBANA_SYSTEM_PASSWORD}
    networks:
      - elk
    volumes:
      - "./volumes/certs:/usr/share/kibana/config/certs:delegated"
      - "./volumes/kibanadata:/usr/share/kibana/data:delegated"
      - "./config/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml"
    ports:
      - 5601:5601
    mem_limit: ${DOCKER_MEM_LIMIT_ELASTICSTACK}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

networks:
  elk:
    driver: bridge