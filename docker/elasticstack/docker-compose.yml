services:
  setup:
    profiles: [ "all", "elastic-only" ]
    image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0
    networks:
      - elk
    volumes:
      - "./config/certs:/usr/share/elasticsearch/config/certs"
    user: "0"
    depends_on:
      es01:
        condition: service_healthy
    command: >
      bash -c '
        until curl -s --cacert config/certs/ca/ca.crt https://es01:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u elastic:elastic -H "Content-Type: application/json" https://es01:9200/_security/user/kibana_system/_password -d "{\"password\":\"kibana_system\"}" | grep -q "^{}"; do sleep 10; done;
        echo "All done!";
      '
  es01:
    profiles: [ "all", "elastic-only" ]
    image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0
    networks:
      - elk
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - "./config/certs:/usr/share/elasticsearch/config/certs"
      - "./volumes/esdata01:/usr/share/elasticsearch/data"
      - "./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
    environment:
      ES_JAVA_OPTS: -Xmx256m -Xms256m
      ELASTIC_PASSWORD: elastic
    deploy:
      resources:
        limits:
          memory: "${DOCKER_MEM_LIMIT_ELASTICSTACK:-1G}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  logstash:
    profiles: [ "all" ]
    environment:
      ELASTICSTACK_USER_ELASTIC_PASSWORD: elastic
    depends_on:
      es01:
        condition: service_healthy
    image: docker.elastic.co/logstash/logstash:8.0.0
    networks:
      - elk
    volumes:
      - "./config/certs:/usr/share/logstash/certs"
      - "./volumes/logstashdata:/usr/share/logstash/data"
      - "./config/logstash:/usr/share/logstash/config"
      - "../logs/:/var/log/local_development"
    ports:
      - "5044:5044"
    deploy:
      resources:
        limits:
          memory: "${DOCKER_MEM_LIMIT_ELASTICSTACK:-1G}"

  kibana:
    profiles: [ "all" ]
    depends_on:
      es01:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:8.0.0
    environment:
      ELASTICSTACK_USER_KIBANA_SYSTEM_PASSWORD: kibana_system
    networks:
      - elk
    volumes:
      - "./config/certs:/usr/share/kibana/config/certs"
      - "./volumes/kibanadata:/usr/share/kibana/data"
      - "./config/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml"
    ports:
      - "5601:5601"
    deploy:
      resources:
        limits:
          memory: "${DOCKER_MEM_LIMIT_ELASTICSTACK:-1G}"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

networks:
  elk:
    driver: bridge
